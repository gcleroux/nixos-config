# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")

    # Importing disk config
    ./disks/sk_hynix_p41.nix
  ];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  boot = {
    loader = {
      # Use the systemd-boot EFI boot loader.
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
    };
    # Kernel config
    kernelPackages = pkgs.linuxPackages_zen;
    kernelParams = [
      "mem_sleep_default=deep"
      "quiet"
      "splash"
    ];

    # TODO: Make the amd options into a module with virtualisation
    kernelModules = [ "kvm-amd" ];
    extraModprobeConfig = "options kvm_amd nested=1";

    initrd = {
      availableKernelModules = [
        "xhci_pci"
        "thunderbolt"
        "nvme"
        "usb_storage"
        "sd_mod"
      ];
      kernelModules = [ ];
      luks.devices."root".device = "/dev/disk/by-uuid/dbed6eea-7331-4610-b531-4f78b063fb1a";
      systemd.enable = true;
    };
    tmp.cleanOnBoot = true;
  };

  hardware = {
    cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

    # GPU hardware acceleration
    opengl = {
      enable = true;
      extraPackages = with pkgs; [ rocmPackages.clr.icd ];
    };
    opentabletdriver.enable = true;
    opentabletdriver.daemon.enable = true;
    logitech.wireless.enable = true;
    logitech.wireless.enableGraphical = true;
  };

  networking.useDHCP = lib.mkDefault true;
}
